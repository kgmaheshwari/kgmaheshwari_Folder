<Activity mc:Ignorable="sap sap2010 sads" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap2010:WorkflowViewState.IdRef="Main_1"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Database</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Database</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Flowchart sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="excelDT" />
      <Variable x:TypeArguments="sd:DataTable" Name="textDT" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="config" />
      <Variable x:TypeArguments="x:Int32" Name="reqNo" />
      <Variable x:TypeArguments="ui:DatabaseConnection" Name="connectionObj" />
      <Variable x:TypeArguments="x:String" Name="splitDataLogMsg" />
      <Variable x:TypeArguments="x:String" Name="moveFileLogMsg" />
    </Flowchart.Variables>
    <Flowchart.StartNode>
      <FlowStep x:Name="__ReferenceID0" sap2010:WorkflowViewState.IdRef="FlowStep_29">
        <Sequence DisplayName="Complete Process" sap2010:WorkflowViewState.IdRef="Sequence_3">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:String" Name="InputFolder_Path" />
            <Variable x:TypeArguments="ui:GenericValue" Name="currentDate" />
            <Variable x:TypeArguments="x:Boolean" Name="isInputTextFileExists" />
            <Variable x:TypeArguments="ui:GenericValue" Name="noOfFiles" />
            <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="orchestratorConfig" />
            <Variable x:TypeArguments="sd:DataTable" Name="ProcessMasterLogDT" />
            <Variable x:TypeArguments="sd:DataTable" Name="ProcessOutputLogDT" />
          </Sequence.Variables>
          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Get Orchestrator Assets" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_75" UnSafe="False" WorkflowFileName="GetOrchestratorAssets.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="OrchetratorConfig">[orchestratorConfig]</OutArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <Assign sap2010:WorkflowViewState.IdRef="Assign_17">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[InputFolder_Path]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[orchestratorConfig("Inv Weekly Comparison Input File Path")]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap2010:WorkflowViewState.IdRef="Assign_6">
            <Assign.To>
              <OutArgument x:TypeArguments="ui:GenericValue">[currentDate]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="ui:GenericValue">[DateTime.Now.ToString("yyyyMMdd")]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap2010:WorkflowViewState.IdRef="Assign_15">
            <Assign.To>
              <OutArgument x:TypeArguments="ui:GenericValue">[noOfFiles]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="ui:GenericValue">[Directory.GetFiles(InputFolder_Path,"*_INV_"+currentDate+".xl*",SearchOption.AllDirectories).Length]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap2010:WorkflowViewState.IdRef="Assign_16">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Int32">[reqNo]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Int32">[Cint(orchestratorConfig("Inv Weekly Comparison Req No"))]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:DatabaseConnect DatabaseConnection="[connectionObj]" DisplayName="Connect" sap2010:WorkflowViewState.IdRef="DatabaseConnect_4" ProviderName="System.Data.SqlClient" ConnectionString="[&quot;Data Source=&quot;+orchestratorConfig(&quot;Data Source Name&quot;)+&quot;;Initial Catalog=&quot;+orchestratorConfig(&quot;Database Name&quot;)+&quot;;Integrated Security=True&quot;]" />
          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Set Request Number" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_81" UnSafe="False" WorkflowFileName="SetRequestNumber.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:Int32" x:Key="reqNo">[reqNo]</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Insert Request Into Process Master" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_87" UnSafe="False" WorkflowFileName="InsertRequestIntoProcessMaster.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="ui:DatabaseConnection" x:Key="connectionObj">[connectionObj]</InArgument>
              <InArgument x:TypeArguments="x:Int32" x:Key="reqNo">[reqNo]</InArgument>
              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="Config">[orchestratorConfig]</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[Directory.GetFiles(InputFolder_Path,&quot;*_INV_&quot;+currentDate+&quot;.xl*&quot;,SearchOption.AllDirectories)]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="x:String">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:String" Name="clientFilePath" />
                </ActivityAction.Argument>
                <TryCatch DisplayName="Try Catch" sap2010:WorkflowViewState.IdRef="TryCatch_4">
                  <TryCatch.Try>
                    <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_13">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:String" Name="fileName" />
                        <Variable x:TypeArguments="ui:GenericValue" Name="clientName" />
                        <Variable x:TypeArguments="x:String" Name="outputFilePath" />
                        <Variable x:TypeArguments="x:String" Name="templateFile" />
                      </Sequence.Variables>
                      <Assign sap2010:WorkflowViewState.IdRef="Assign_19">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[fileName]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[Path.GetFileName(clientFilePath)]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap2010:WorkflowViewState.IdRef="Assign_20">
                        <Assign.To>
                          <OutArgument x:TypeArguments="ui:GenericValue">[clientName]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="ui:GenericValue">[fileName.Split("_"c)(0)]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Write Log" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_84" UnSafe="False" WorkflowFileName="WriteLog.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="ui:DatabaseConnection" x:Key="connectionObj">[connectionObj]</InArgument>
                          <InArgument x:TypeArguments="x:Int32" x:Key="reqNo">[reqNo]</InArgument>
                          <InArgument x:TypeArguments="s:Object[]" x:Key="dataArray">[{reqNo,1,"Process started for the client "+clientName}]</InArgument>
                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="Config">[orchestratorConfig]</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <Assign sap2010:WorkflowViewState.IdRef="Assign_7">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[orchestratorConfig("Input folder path")]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[InputFolder_Path]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap2010:WorkflowViewState.IdRef="Assign_5">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[orchestratorConfig("Inv weekly comparison Input excel file path")]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[clientFilePath]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Write Log" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_46" UnSafe="False" WorkflowFileName="WriteLog.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="ui:DatabaseConnection" x:Key="connectionObj">[connectionObj]</InArgument>
                          <InArgument x:TypeArguments="x:Int32" x:Key="reqNo">[reqNo]</InArgument>
                          <InArgument x:TypeArguments="s:Object[]" x:Key="dataArray">[{reqNo,2,"Getting orchestrator assets and connected to database successfully"}]</InArgument>
                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="Config">[orchestratorConfig]</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Read Config File" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_50" UnSafe="False" WorkflowFileName="ReadConfigFile.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="s:String[]" x:Key="configSheets">[{"Settings","Constants"}]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="Client">[clientName]</InArgument>
                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="OrchestratorConfig">[orchestratorConfig]</InArgument>
                          <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="Config">[config]</OutArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Write Log" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_51" UnSafe="False" WorkflowFileName="WriteLog.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="ui:DatabaseConnection" x:Key="connectionObj">[connectionObj]</InArgument>
                          <InArgument x:TypeArguments="x:Int32" x:Key="reqNo">[reqNo]</InArgument>
                          <InArgument x:TypeArguments="s:Object[]" x:Key="dataArray">[{reqNo,3,"Read config successfully"}]</InArgument>
                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="Config">[config]</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Read Input Files" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_52" UnSafe="False" WorkflowFileName="ReadInputFiles.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <OutArgument x:TypeArguments="sd:DataTable" x:Key="ExcelDT">[excelDT]</OutArgument>
                          <OutArgument x:TypeArguments="sd:DataTable" x:Key="TextDT">[textDT]</OutArgument>
                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="Config">[config]</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Split Data By Range " sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_53" UnSafe="False" WorkflowFileName="SplitDataByRange.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InOutArgument x:TypeArguments="sd:DataTable" x:Key="TextDT">[textDT]</InOutArgument>
                          <OutArgument x:TypeArguments="x:String" x:Key="SplitDataLogMsg">[splitDataLogMsg]</OutArgument>
                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="Config">[config]</InArgument>
                          <OutArgument x:TypeArguments="x:Boolean" x:Key="isInputFileExists">[isInputTextFileExists]</OutArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="ClientName">[clientName]</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <If Condition="[isInputTextFileExists]" sap2010:WorkflowViewState.IdRef="If_1">
                        <If.Then>
                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_6">
                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Write Log" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_54" UnSafe="False" WorkflowFileName="WriteLog.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="ui:DatabaseConnection" x:Key="connectionObj">[connectionObj]</InArgument>
                                <InArgument x:TypeArguments="x:Int32" x:Key="reqNo">[reqNo]</InArgument>
                                <InArgument x:TypeArguments="s:Object[]" x:Key="dataArray">[{reqNo,4,splitDataLogMsg}]</InArgument>
                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="Config">[config]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <Assign sap2010:WorkflowViewState.IdRef="Assign_18">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[outputFilePath]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[Config("Inv weekly comparison output file path").ToString+"\Inventory_Weekly_Diff_"+clientName.ToUpper+"_"+DateTime.Now.ToString("yyMMdd")+".xlsx"]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Write Input Data Into DB" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_88" UnSafe="False" WorkflowFileName="WriteInputDataIntoDB.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="ui:DatabaseConnection" x:Key="ConnectionObj">[connectionObj]</InArgument>
                                <InArgument x:TypeArguments="sd:DataTable" x:Key="TextDT">[textDT]</InArgument>
                                <InArgument x:TypeArguments="sd:DataTable" x:Key="ExcelDT">[excelDT]</InArgument>
                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="Config">[config]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="Client">[clientName]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Write Log" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_89" UnSafe="False" WorkflowFileName="WriteLog.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="ui:DatabaseConnection" x:Key="connectionObj">[connectionObj]</InArgument>
                                <InArgument x:TypeArguments="x:Int32" x:Key="reqNo">[reqNo]</InArgument>
                                <InArgument x:TypeArguments="s:Object[]" x:Key="dataArray">[{reqNo,5,"Write input data into DB tables is completed successfully"}]</InArgument>
                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="Config">[config]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Get Output Tables From DB" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_90" UnSafe="False" WorkflowFileName="GetOutputTablesFromDB.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:Int32" x:Key="ReqNo">[reqNo]</InArgument>
                                <InArgument x:TypeArguments="ui:DatabaseConnection" x:Key="ConnectionObj">[connectionObj]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="ClientName">[clientName]</InArgument>
                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="Config">[config]</InArgument>
                                <InArgument x:TypeArguments="sd:DataTable" x:Key="TextDT">[textDT]</InArgument>
                                <InArgument x:TypeArguments="sd:DataTable" x:Key="ExcelDT">[excelDT]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Write Log" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_92" UnSafe="False" WorkflowFileName="WriteLog.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="ui:DatabaseConnection" x:Key="connectionObj">[connectionObj]</InArgument>
                                <InArgument x:TypeArguments="x:Int32" x:Key="reqNo">[reqNo]</InArgument>
                                <InArgument x:TypeArguments="s:Object[]" x:Key="dataArray" xml:space="preserve">[{reqNo,6,"Generated output file  for the client "+clientName+" successfully"}]</InArgument>
                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="Config">[config]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Write Log" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_93" UnSafe="False" WorkflowFileName="WriteLog.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="ui:DatabaseConnection" x:Key="connectionObj">[connectionObj]</InArgument>
                                <InArgument x:TypeArguments="x:Int32" x:Key="reqNo">[reqNo]</InArgument>
                                <InArgument x:TypeArguments="s:Object[]" x:Key="dataArray">[{reqNo,7,"Process completed successfully"}]</InArgument>
                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="Config">[config]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_8">
                            <WriteLine DisplayName="Write Line" sap2010:WorkflowViewState.IdRef="WriteLine_3" Text="Agency file not found." />
                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Write Log" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_72" UnSafe="False" WorkflowFileName="WriteLog.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="ui:DatabaseConnection" x:Key="connectionObj">[connectionObj]</InArgument>
                                <InArgument x:TypeArguments="x:Int32" x:Key="reqNo">[reqNo]</InArgument>
                                <InArgument x:TypeArguments="s:Object[]" x:Key="dataArray">[{reqNo,4,"Agency file not found to process"}]</InArgument>
                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="Config">[config]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Write Log" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_85" UnSafe="False" WorkflowFileName="WriteLog.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="ui:DatabaseConnection" x:Key="connectionObj">[connectionObj]</InArgument>
                                <InArgument x:TypeArguments="x:Int32" x:Key="reqNo">[reqNo]</InArgument>
                                <InArgument x:TypeArguments="s:Object[]" x:Key="dataArray">[{reqNo,5,"Process completed successfully"}]</InArgument>
                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="Config">[config]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                          </Sequence>
                        </If.Else>
                      </If>
                    </Sequence>
                  </TryCatch.Try>
                  <TryCatch.Catches>
                    <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_4">
                      <ActivityAction x:TypeArguments="s:Exception">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                        </ActivityAction.Argument>
                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Write Log" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_94" UnSafe="False" WorkflowFileName="WriteLog.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="ui:DatabaseConnection" x:Key="connectionObj">[connectionObj]</InArgument>
                            <InArgument x:TypeArguments="x:Int32" x:Key="reqNo">[reqNo]</InArgument>
                            <InArgument x:TypeArguments="s:Object[]" x:Key="dataArray">[{reqNo,5,"Exception: "+exception.Message}]</InArgument>
                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="Config">[orchestratorConfig]</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                      </ActivityAction>
                    </Catch>
                  </TryCatch.Catches>
                </TryCatch>
              </ActivityAction>
            </ui:ForEach.Body>
          </ui:ForEach>
          <TryCatch DisplayName="Try Catch" sap2010:WorkflowViewState.IdRef="TryCatch_3">
            <TryCatch.Try>
              <If Condition="[noOfFiles = 0]" sap2010:WorkflowViewState.IdRef="If_2">
                <If.Then>
                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_10">
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Write Log" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_77" UnSafe="False" WorkflowFileName="WriteLog.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="ui:DatabaseConnection" x:Key="connectionObj">[connectionObj]</InArgument>
                        <InArgument x:TypeArguments="x:Int32" x:Key="reqNo">[reqNo]</InArgument>
                        <InArgument x:TypeArguments="s:Object[]" x:Key="dataArray">[{reqNo,1,"No Input Client Files are availabe for "+DateTime.Now.ToString("yyyyMMdd")}]</InArgument>
                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="Config">[orchestratorConfig]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Set Request Number" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_78" UnSafe="False" WorkflowFileName="SetRequestNumber.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:Int32" x:Key="reqNo">[reqNo]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Warn" Message="[&quot;No Input Client Files are availabe for &quot;+DateTime.Now.ToString(&quot;yyyyMMdd&quot;)]" />
                  </Sequence>
                </If.Then>
                <If.Else>
                  <WriteLine DisplayName="Write Line" sap2010:WorkflowViewState.IdRef="WriteLine_2" Text="[noOfFiles.ToString+&quot; client files found&quot;]" />
                </If.Else>
              </If>
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                <ActivityAction x:TypeArguments="s:Exception">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                  </ActivityAction.Argument>
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
          </TryCatch>
          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Write DB Logs To Excel" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_80" UnSafe="False" WorkflowFileName="WriteDBLogsToExcel.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="ui:DatabaseConnection" x:Key="ConnectionObj">[connectionObj]</InArgument>
              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="Config">[orchestratorConfig]</InArgument>
              <InArgument x:TypeArguments="x:Int32" x:Key="ReqNo">[reqNo]</InArgument>
              <InArgument x:TypeArguments="sd:DataTable" x:Key="ProcessOutputLogsDT">[ProcessOutputLogDT]</InArgument>
              <InArgument x:TypeArguments="sd:DataTable" x:Key="ProcessMasterLogsDT">[ProcessMasterLogDT]</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
        </Sequence>
      </FlowStep>
    </Flowchart.StartNode>
    <x:Reference>__ReferenceID0</x:Reference>
    <sads:DebugSymbol.Symbol>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</sads:DebugSymbol.Symbol>
  </Flowchart>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_75" sap:VirtualizedContainerService.HintSize="753,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_17" sap:VirtualizedContainerService.HintSize="753,60" />
      <sap2010:ViewStateData Id="Assign_6" sap:VirtualizedContainerService.HintSize="753,60" />
      <sap2010:ViewStateData Id="Assign_15" sap:VirtualizedContainerService.HintSize="753,60" />
      <sap2010:ViewStateData Id="Assign_16" sap:VirtualizedContainerService.HintSize="753,60">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="DatabaseConnect_4" sap:VirtualizedContainerService.HintSize="753,59">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_81" sap:VirtualizedContainerService.HintSize="753,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_87" sap:VirtualizedContainerService.HintSize="753,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_19" sap:VirtualizedContainerService.HintSize="697,60" />
      <sap2010:ViewStateData Id="Assign_20" sap:VirtualizedContainerService.HintSize="697,60" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_84" sap:VirtualizedContainerService.HintSize="697,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_7" sap:VirtualizedContainerService.HintSize="697,60" />
      <sap2010:ViewStateData Id="Assign_5" sap:VirtualizedContainerService.HintSize="697,60" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_46" sap:VirtualizedContainerService.HintSize="697,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_50" sap:VirtualizedContainerService.HintSize="697,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_51" sap:VirtualizedContainerService.HintSize="697,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_52" sap:VirtualizedContainerService.HintSize="697,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_53" sap:VirtualizedContainerService.HintSize="697,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_54" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_18" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_88" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_89" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_90" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_92" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_93" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_6" sap:VirtualizedContainerService.HintSize="336,946">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_3" sap:VirtualizedContainerService.HintSize="314,61" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_72" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_85" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_8" sap:VirtualizedContainerService.HintSize="336,439">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="697,1094">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_13" sap:VirtualizedContainerService.HintSize="719,2380">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_94" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Catch`1_4" sap:VirtualizedContainerService.HintSize="723,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_4" sap:VirtualizedContainerService.HintSize="737,2607">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_1" sap:VirtualizedContainerService.HintSize="753,2741">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_77" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_78" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_1" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Sequence_10" sap:VirtualizedContainerService.HintSize="336,469">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_2" sap:VirtualizedContainerService.HintSize="210,61" />
      <sap2010:ViewStateData Id="If_2" sap:VirtualizedContainerService.HintSize="571,617">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_3" sap:VirtualizedContainerService.HintSize="575,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_3" sap:VirtualizedContainerService.HintSize="753,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_80" sap:VirtualizedContainerService.HintSize="753,87" />
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="775,3963">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_29">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">200,124.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_1" sap:VirtualizedContainerService.HintSize="695,636">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
            <av:Size x:Key="ShapeSize">60,75</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">300,77.5 300,124.5</av:PointCollection>
            <x:Double x:Key="Width">681</x:Double>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Main_1" sap:VirtualizedContainerService.HintSize="735,716" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>