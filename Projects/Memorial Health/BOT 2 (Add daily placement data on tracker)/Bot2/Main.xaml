<Activity mc:Ignorable="sap sap2010 sads" x:Class="InitiAllSettings"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:maes="clr-namespace:Microsoft.Activities.Extensions.Statements;assembly=Microsoft.Activities.Extensions"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:sc="clr-namespace:System.Collections;assembly=mscorlib"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="out_ConfigSheets" Type="OutArgument(s:String[])" />
    <x:Property Name="out_ConfigFile" Type="OutArgument(x:String)" />
    <x:Property Name="out_Config" Type="OutArgument(scg:Dictionary(x:String, x:String))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>GetAllSettings_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>UiPath.Database</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>TimeSpan2</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>UiPath.Database</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Generating Tracking Data" sap2010:WorkflowViewState.IdRef="Sequence_2">
    <Sequence.Variables>
      <Variable x:TypeArguments="s:String[]" Default="[{&quot;Settings&quot;,&quot;Constants&quot;}]" Name="ConfigSheets" />
      <Variable x:TypeArguments="x:String" Default="C:\Users\karunkumar\Desktop\Bot2\Config\Config.xlsx" Name="ConfigFile" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="Config" />
      <Variable x:TypeArguments="sd:DataTable" Name="configTable" />
      <Variable x:TypeArguments="sd:DataTable" Name="CsvDt" />
      <Variable x:TypeArguments="sd:DataTable" Name="ExcelDt" />
      <Variable x:TypeArguments="x:String" Name="AgrCol" />
      <Variable x:TypeArguments="x:String" Name="GrpCol" />
      <Variable x:TypeArguments="sd:DataTable" Name="modifiedCSVOutputDT" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="ListofSums" />
      <Variable x:TypeArguments="sc:IList" Name="ListofCnt" />
      <Variable x:TypeArguments="x:String" Name="CntCol" />
      <Variable x:TypeArguments="x:String" Name="Tot_Agr" />
      <Variable x:TypeArguments="ui:GenericValue" Name="Tot_Col" />
      <Variable x:TypeArguments="x:String" Name="week" />
      <Variable x:TypeArguments="scg:List(sd:DataRow)" Name="ListRowRemove" />
      <Variable x:TypeArguments="x:String" Name="CliAgrCol" />
      <Variable x:TypeArguments="x:String" Name="CliGrpCol" />
      <Variable x:TypeArguments="x:String" Name="CliCntCol" />
      <Variable x:TypeArguments="sd:DataTable" Name="CsvDt1" />
    </Sequence.Variables>
    <Assign sap2010:WorkflowViewState.IdRef="Assign_25">
      <Assign.To>
        <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[Config]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[new Dictionary(of string,string)]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For each sheet &lt;string&gt;" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[configSheets]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:String">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:String" Name="sheet" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Get Local Settings" sap2010:WorkflowViewState.IdRef="Sequence_5">
            <ui:ReadRange AddHeaders="True" DataTable="[configTable]" DisplayName="Read range " sap2010:WorkflowViewState.IdRef="ReadRange_2" SheetName="[sheet]" WorkbookPath="[ConfigFile]">
              <ui:ReadRange.Range>
                <InArgument x:TypeArguments="x:String">
                  <Literal x:TypeArguments="x:String" Value="" />
                </InArgument>
              </ui:ReadRange.Range>
            </ui:ReadRange>
            <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[configTable]" DisplayName="For each row" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
              <ui:ForEachRow.Body>
                <ActivityAction x:TypeArguments="sd:DataRow">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                  </ActivityAction.Argument>
                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_13">
                    <maes:AddToDictionary x:TypeArguments="x:String, x:String" Dictionary="[Config]" DisplayName="Add to dictionary" sap2010:WorkflowViewState.IdRef="AddToDictionary`2_1" Key="[row(&quot;Name&quot;).ToString]" Value="[row(&quot;Value&quot;).ToString]" />
                  </Sequence>
                </ActivityAction>
              </ui:ForEachRow.Body>
            </ui:ForEachRow>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
    <ui:ReadCsvFile Encoding="{x:Null}" DataTable="[CsvDt]" Delimitator="Comma" DisplayName="Read CSV" FilePath="[Config (&quot;Input CSV file path&quot;)]" sap2010:WorkflowViewState.IdRef="ReadCsvFile_1" IncludeColumnNames="False" />
    <Sequence DisplayName="Setting Header" sap2010:WorkflowViewState.IdRef="Sequence_30">
      <Sequence.Variables>
        <Variable x:TypeArguments="s:String[]" Name="HeaderArray" />
        <Variable x:TypeArguments="sd:DataRow" Name="HeaderRow" />
      </Sequence.Variables>
      <ui:InvokeCode ContinueOnError="{x:Null}" Code="InTable.Rows.RemoveAt(0)&#xA;InTable.Rows.RemoveAt(0)&#xA;InTable.Rows.RemoveAt(0)&#xA;InTable.Rows.RemoveAt(0)" DisplayName="Invoke code" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
        <ui:InvokeCode.Arguments>
          <InOutArgument x:TypeArguments="sd:DataTable" x:Key="InTable">[CsvDt]</InOutArgument>
        </ui:InvokeCode.Arguments>
      </ui:InvokeCode>
      <Assign sap2010:WorkflowViewState.IdRef="Assign_60">
        <Assign.To>
          <OutArgument x:TypeArguments="s:String[]">[HeaderArray]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="s:String[]">[new string(){"ACTIVITY DATE","ENT CD","COS CD","ACCOUNT NUMBER","NAME","FC","PAT TYP","ADMIT DATE","DISCH DATE","DISCH AGE","TOTAL CHARGES","ACCOUNT BALANCE","ACS","COS"}]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap2010:WorkflowViewState.IdRef="Assign_61">
        <Assign.To>
          <OutArgument x:TypeArguments="sd:DataRow">[HeaderRow]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="sd:DataRow">[csvDT.NewRow]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap2010:WorkflowViewState.IdRef="Assign_62">
        <Assign.To>
          <OutArgument x:TypeArguments="s:Object[]">[HeaderRow.ItemArray]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="s:Object[]">[HeaderArray]</InArgument>
        </Assign.Value>
      </Assign>
      <InvokeMethod DisplayName="Invoke Method" sap2010:WorkflowViewState.IdRef="InvokeMethod_1" MethodName="InsertAt">
        <InvokeMethod.TargetObject>
          <InArgument x:TypeArguments="sd:DataRowCollection">[csvDT.Rows]</InArgument>
        </InvokeMethod.TargetObject>
        <InArgument x:TypeArguments="sd:DataRow">[HeaderRow]</InArgument>
        <InArgument x:TypeArguments="x:Int32">0</InArgument>
      </InvokeMethod>
    </Sequence>
    <Assign sap2010:WorkflowViewState.IdRef="Assign_29">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[AgrCol]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[Config("AGR_COL")]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap2010:WorkflowViewState.IdRef="Assign_56">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[CliAgrCol]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[Config("CLI_AGR_COL")]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap2010:WorkflowViewState.IdRef="Assign_30">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[GrpCol]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[Config ("GRP_COL")]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap2010:WorkflowViewState.IdRef="Assign_57">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[CliGrpCol]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[Config ("CLI_GRP_COL")]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap2010:WorkflowViewState.IdRef="Assign_38">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[CntCol]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[Config ("CNT_COLM")]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap2010:WorkflowViewState.IdRef="Assign_58">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[CliCntCol]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[Config ("CLI_CNT_COLM")]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:WriteCsvFile Encoding="{x:Null}" AddHeaders="False" DataTable="[CsvDt]" Delimitator="Comma" DisplayName="Write CSV" FilePath="[Config (&quot;File path&quot;)+&quot;\temp.csv&quot;]" sap2010:WorkflowViewState.IdRef="WriteCsvFile_1" />
    <ui:ReadCsvFile Encoding="{x:Null}" DataTable="[CsvDt]" Delimitator="Comma" DisplayName="Read CSV" FilePath="[Config (&quot;File path&quot;)+&quot;\temp.csv&quot;]" sap2010:WorkflowViewState.IdRef="ReadCsvFile_3" />
    <ui:Delete ContinueOnError="{x:Null}" sap2010:WorkflowViewState.IdRef="Delete_1" Path="[Config (&quot;File path&quot;)+&quot;\temp.csv&quot;]" />
    <Assign sap2010:WorkflowViewState.IdRef="Assign_31">
      <Assign.To>
        <OutArgument x:TypeArguments="sd:DataTable">[modifiedCSVOutputDT]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="sd:DataTable" xml:space="preserve">[(From p In CsvDt.Select()
Group p By GrpCol=p.Item(GrpCol).ToString Into Group
Select Group(0)).ToArray.CopyToDataTable()]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap2010:WorkflowViewState.IdRef="Assign_32">
      <Assign.To>
        <OutArgument x:TypeArguments="sd:DataTable">[modifiedCSVOutputDT]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="sd:DataTable">[modifiedCSVOutputDT.DefaultView.ToTable(False,GrpCol,CntCol,AgrCol)]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap2010:WorkflowViewState.IdRef="Assign_33">
      <Assign.To>
        <OutArgument x:TypeArguments="scg:List(x:String)">[ListofSums]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="scg:List(x:String)">[new List(of string)]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap2010:WorkflowViewState.IdRef="Assign_39">
      <Assign.To>
        <OutArgument x:TypeArguments="scg:List(x:String)">[ListofSums]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="scg:List(x:String)" xml:space="preserve">[(From p In CsvDT.Select()
Group p By GrpCol=p.Item(Grpcol) Into GroupA=Group
Select Convert.ToString(GroupA.Sum(Function(x) Convert.ToDouble(x.Item(AgrCol).ToString)))).ToList()]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap2010:WorkflowViewState.IdRef="Assign_34">
      <Assign.To>
        <OutArgument x:TypeArguments="sc:IList">[ListofCnt]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="scg:List(x:String)">[new List(of string)]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap2010:WorkflowViewState.IdRef="Assign_35">
      <Assign.To>
        <OutArgument x:TypeArguments="sc:IList">[ListofCnt]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="scg:List(x:Int32)" xml:space="preserve">[(From p In CsvDT.Select()
Group p By GrpCOl=p.Item(GrpCol) Into GroupA=Group
Select (GroupA.Count)).ToList()]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[modifiedCSVOutputDT]" DisplayName="For Each Row" sap2010:WorkflowViewState.IdRef="ForEachRow_3">
      <ui:ForEachRow.Body>
        <ActivityAction x:TypeArguments="sd:DataRow">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_14">
            <Assign sap2010:WorkflowViewState.IdRef="Assign_36">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Object">[row(Agrcol)]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Object" xml:space="preserve">["$  " + listOfSums(modifiedCSVOutputDT.Rows.IndexOf(row)).ToString]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap2010:WorkflowViewState.IdRef="Assign_37">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Object">[row(CntCol)]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Object">[listOfCnt(modifiedCSVOutputDT.Rows.IndexOf(row)).ToString]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </ActivityAction>
      </ui:ForEachRow.Body>
    </ui:ForEachRow>
    <Assign sap2010:WorkflowViewState.IdRef="Assign_54">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[week]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[CsvDt.Rows(1)(0).ToString]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:AddDataColumn x:TypeArguments="x:Object" Column="{x:Null}" AllowDBNull="True" AutoIncrement="False" ColumnName="Date" DataTable="[modifiedCSVOutputDT]" DefaultValue="[week]" DisplayName="Add Data Column" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_1" MaxLength="100" Unique="False" />
    <ui:AppendRange DataTable="[modifiedCSVOutputDT]" DisplayName="Append Range" sap2010:WorkflowViewState.IdRef="AppendRange_1" SheetName="Data Tab_Placement" WorkbookPath="[Config (&quot;Summary_File&quot;)]" />
    <sads:DebugSymbol.Symbol>dypDOlxVc2Vyc1xrYXJ1bmt1bWFyXERlc2t0b3BcQm90MlxNYWluLnhhbWxkVwPOAg4CAQFZNllmAgEDWjRaaQIBAm4FdQ4DAZQBdgWTARICAX+UAQWUAesBAgF6lQEFvgEQAgFlvwEFxgEOAgFgxwEFzgEOAgFbzwEF1gEOAgFW1wEF3gEOAgFR3wEF5gEOAgFM5wEF7gEOAgFH7wEF7wHyAQIBQvABBfAB3AECAT3xAQXxAZYBAgE68gEF+wEOAgE2/AEFgwIOAgEuhAIFiwIOAgEqjAIFlQIOAgEmlgIFnQIOAgEingIFpwIOAgEeqAIFwgIVAgEUwwIFygIOAgEQywIFywKqAgIBCswCBcwC1gECAQRzSnNsAwGXAXBLcFMDAZUBdqUBdrUBAwGSAXwLkAEWAwGAAZQBM5QBPAIBfZQBcZQBnQECAXuaAQeeARcCAXefAQemARACAXOnAQeuARACAW+vAQe2ARACAWu3AQe9ARYCAWbEATDEAUMCAWPBATHBATkCAWHMATDMAUcCAV7JATHJATwCAVzUATDUAUQCAVnRATHRATkCAVfcATDcAUgCAVTZATHZATwCAVLkATDkAUUCAU/hATHhATkCAU3sATDsAUkCAUrpATHpATwCAUjvAUfvAVACAUXvAYYB7wG+AQIBQ/ABM/ABPAIBQPABcfABqQECAT7xAVvxAZMBAgE79AE19AFKAgE3gQI0gQJ5AgEx/gE1/gFKAgEviQI6iQJPAgEthgI7hgJHAgErjgI7jgJHAgEnmwI6mwJPAgElmAIxmAI8AgEjoAIxoAI8AgEfqAI2qAJNAgEcrgILvwIWAgEVyAIwyAJLAgETxQIxxQI3AgERywKuAcsCtgECAQ7LAnjLAn4CAQ3LAokBywKgAQIBC8wCH8wCNgIBCMwCjAHMAqABAgEHzAKuAcwC0wECAQV9DYMBHAMBigGEAQ2PAR0DAYEBnAFJnAFQAgF4pAE0pAHgAQIBdqEBNaEBQgIBdKwBNKwBQgIBcqkBNakBQAIBcLQBNLQBQQIBbbEBNbEBSgIBbLwBL7wBMAIBarsBMrsBPQIBaLkBPrkBSgIBZ68CDbYCFgIBGbcCDb4CFgIBFn03fUYDAZABgAETgAFCAwGPAX2ZAX2iAQMBjQF9sAF9vgEDAYsBhAE+hAFNAwGIAYoBE4wBHgMBggGxAjmxAkYCARq8Aji8AnMCARi5Ajm5AkYCAReLARWLAY8CAwGDAYsB6QGLAYwCAwGHAYsBW4sBZQMBhQGLAcABiwHiAQMBhAE=</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="Assign_25" sap:VirtualizedContainerService.HintSize="468,60" />
      <sap2010:ViewStateData Id="ReadRange_2" sap:VirtualizedContainerService.HintSize="430,87" />
      <sap2010:ViewStateData Id="AddToDictionary`2_1" sap:VirtualizedContainerService.HintSize="378,138" />
      <sap2010:ViewStateData Id="Sequence_13" sap:VirtualizedContainerService.HintSize="400,262">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEachRow_2" sap:VirtualizedContainerService.HintSize="430,410" />
      <sap2010:ViewStateData Id="Sequence_5" sap:VirtualizedContainerService.HintSize="452,661">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_3" sap:VirtualizedContainerService.HintSize="468,795">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ReadCsvFile_1" sap:VirtualizedContainerService.HintSize="468,59" />
      <sap2010:ViewStateData Id="InvokeCode_1" sap:VirtualizedContainerService.HintSize="314,164" />
      <sap2010:ViewStateData Id="Assign_60" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_61" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_62" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="InvokeMethod_1" sap:VirtualizedContainerService.HintSize="314,132" />
      <sap2010:ViewStateData Id="Sequence_30" sap:VirtualizedContainerService.HintSize="468,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_29" sap:VirtualizedContainerService.HintSize="468,60" />
      <sap2010:ViewStateData Id="Assign_56" sap:VirtualizedContainerService.HintSize="468,60" />
      <sap2010:ViewStateData Id="Assign_30" sap:VirtualizedContainerService.HintSize="468,60" />
      <sap2010:ViewStateData Id="Assign_57" sap:VirtualizedContainerService.HintSize="468,60" />
      <sap2010:ViewStateData Id="Assign_38" sap:VirtualizedContainerService.HintSize="468,60" />
      <sap2010:ViewStateData Id="Assign_58" sap:VirtualizedContainerService.HintSize="468,60" />
      <sap2010:ViewStateData Id="WriteCsvFile_1" sap:VirtualizedContainerService.HintSize="468,87" />
      <sap2010:ViewStateData Id="ReadCsvFile_3" sap:VirtualizedContainerService.HintSize="468,59" />
      <sap2010:ViewStateData Id="Delete_1" sap:VirtualizedContainerService.HintSize="468,22" />
      <sap2010:ViewStateData Id="Assign_31" sap:VirtualizedContainerService.HintSize="468,64" />
      <sap2010:ViewStateData Id="Assign_32" sap:VirtualizedContainerService.HintSize="468,60" />
      <sap2010:ViewStateData Id="Assign_33" sap:VirtualizedContainerService.HintSize="468,60" />
      <sap2010:ViewStateData Id="Assign_39" sap:VirtualizedContainerService.HintSize="468,64" />
      <sap2010:ViewStateData Id="Assign_34" sap:VirtualizedContainerService.HintSize="468,60" />
      <sap2010:ViewStateData Id="Assign_35" sap:VirtualizedContainerService.HintSize="468,64" />
      <sap2010:ViewStateData Id="Assign_36" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_37" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_14" sap:VirtualizedContainerService.HintSize="264,284">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEachRow_3" sap:VirtualizedContainerService.HintSize="468,432" />
      <sap2010:ViewStateData Id="Assign_54" sap:VirtualizedContainerService.HintSize="468,60" />
      <sap2010:ViewStateData Id="AddDataColumn`1_1" sap:VirtualizedContainerService.HintSize="468,22" />
      <sap2010:ViewStateData Id="AppendRange_1" sap:VirtualizedContainerService.HintSize="468,115" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="490,3498">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetAllSettings_1" sap:VirtualizedContainerService.HintSize="530,3618" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>