<Activity mc:Ignorable="sap sap2010 sads" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap2010:WorkflowViewState.IdRef="Main_1"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Database</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Database</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Flowchart sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="excelDT" />
      <Variable x:TypeArguments="sd:DataTable" Name="textDT" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="config" />
      <Variable x:TypeArguments="x:Int32" Name="reqNo" />
      <Variable x:TypeArguments="ui:DatabaseConnection" Name="connectionObj" />
      <Variable x:TypeArguments="x:String" Name="splitDataLogMsg" />
      <Variable x:TypeArguments="x:String" Name="moveFileLogMsg" />
    </Flowchart.Variables>
    <Flowchart.StartNode>
      <FlowStep x:Name="__ReferenceID0" sap2010:WorkflowViewState.IdRef="FlowStep_29">
        <Sequence DisplayName="Complete Process" sap2010:WorkflowViewState.IdRef="Sequence_3">
          <Sequence.Variables>
            <Variable x:TypeArguments="ui:GenericValue" Name="InputFolder_Path" />
          </Sequence.Variables>
          <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="Inv weekely comparison input file path" DisplayName="Get Asset" sap2010:WorkflowViewState.IdRef="GetRobotAsset_2">
            <ui:GetRobotAsset.Value>
              <OutArgument x:TypeArguments="ui:GenericValue">[InputFolder_Path]</OutArgument>
            </ui:GetRobotAsset.Value>
          </ui:GetRobotAsset>
          <While sap2010:WorkflowViewState.IdRef="While_2" Condition="[Directory.GetFiles(InputFolder_Path, &quot;*.xlsx&quot;).Length &lt;&gt; 0]">
            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_4">
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Get Orchestrator Assets" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_45" UnSafe="False" WorkflowFileName="GetOrchestratorAssets.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="Config">[config]</OutArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <Assign sap2010:WorkflowViewState.IdRef="Assign_5">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[config("Inv weekely comparison Input excel file path")]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[Directory.GetFiles(InputFolder_Path, "*.xlsx")(0).ToString()]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap2010:WorkflowViewState.IdRef="Assign_3">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[reqNo]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[Cint(config("Inv weekely comparison req no"))]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:DatabaseConnect DatabaseConnection="[connectionObj]" DisplayName="Connect" sap2010:WorkflowViewState.IdRef="DatabaseConnect_3" ProviderName="System.Data.SqlClient" ConnectionString="[&quot;Data Source=&quot;+config(&quot;Data Source Name&quot;)+&quot;;Initial Catalog=&quot;+config(&quot;Database Name&quot;)+&quot;;Integrated Security=True&quot;]" />
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Write Log" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_46" UnSafe="False" WorkflowFileName="WriteLog.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="ui:DatabaseConnection" x:Key="connectionObj">[connectionObj]</InArgument>
                  <InArgument x:TypeArguments="x:Int32" x:Key="reqNo">[reqNo]</InArgument>
                  <InArgument x:TypeArguments="s:Object[]" x:Key="dataArray">[{reqNo,1,"Getting orchestrator assets and connected to database successfully."}]</InArgument>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="Config">[config]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Insert Request Into Process Master" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_47" UnSafe="False" WorkflowFileName="InsertRequestIntoProcessMaster.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="ui:DatabaseConnection" x:Key="connectionObj">[connectionObj]</InArgument>
                  <InArgument x:TypeArguments="x:Int32" x:Key="reqNo">[reqNo]</InArgument>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="Config">[config]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Write Log" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_48" UnSafe="False" WorkflowFileName="WriteLog.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="ui:DatabaseConnection" x:Key="connectionObj">[connectionObj]</InArgument>
                  <InArgument x:TypeArguments="x:Int32" x:Key="reqNo">[reqNo]</InArgument>
                  <InArgument x:TypeArguments="s:Object[]" x:Key="dataArray">[{reqno,2,"Request inserted into process master successfully."}]</InArgument>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="Config">[config]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Set Request Number" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_49" UnSafe="False" WorkflowFileName="SetRequestNumber.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:Int32" x:Key="reqNo">[reqNo]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Read Config File" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_50" UnSafe="False" WorkflowFileName="ReadConfigFile.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="s:String[]" x:Key="configSheets">[{"Settings","Constants"}]</InArgument>
                  <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="config">[config]</InOutArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Write Log" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_51" UnSafe="False" WorkflowFileName="WriteLog.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="ui:DatabaseConnection" x:Key="connectionObj">[connectionObj]</InArgument>
                  <InArgument x:TypeArguments="x:Int32" x:Key="reqNo">[reqNo]</InArgument>
                  <InArgument x:TypeArguments="s:Object[]" x:Key="dataArray">[{reqNo,3,"Read config successfully."}]</InArgument>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="Config">[config]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Read Input Files" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_52" UnSafe="False" WorkflowFileName="ReadInputFiles.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <OutArgument x:TypeArguments="sd:DataTable" x:Key="ExcelDT">[excelDT]</OutArgument>
                  <OutArgument x:TypeArguments="sd:DataTable" x:Key="TextDT">[textDT]</OutArgument>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="Config">[config]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Split Data By Range " sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_53" UnSafe="False" WorkflowFileName="SplitDataByRange.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InOutArgument x:TypeArguments="sd:DataTable" x:Key="TextDT">[textDT]</InOutArgument>
                  <OutArgument x:TypeArguments="x:String" x:Key="SplitDataLogMsg">[splitDataLogMsg]</OutArgument>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="Config">[config]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Write Log" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_54" UnSafe="False" WorkflowFileName="WriteLog.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="ui:DatabaseConnection" x:Key="connectionObj">[connectionObj]</InArgument>
                  <InArgument x:TypeArguments="x:Int32" x:Key="reqNo">[reqNo]</InArgument>
                  <InArgument x:TypeArguments="s:Object[]" x:Key="dataArray">[{reqNo,4,splitDataLogMsg}]</InArgument>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="Config">[config]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Generate MH Summary" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_55" UnSafe="False" WorkflowFileName="GenerateSummary.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="sd:DataTable" x:Key="TextDT">[textDT]</InArgument>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="Config">[config]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="GrpCol">[Config("MH group column name")]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="AgrCol">[Config("MH sum column name")]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="SummaryType">MH Summary</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Write Log" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_56" UnSafe="False" WorkflowFileName="WriteLog.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="ui:DatabaseConnection" x:Key="connectionObj">[connectionObj]</InArgument>
                  <InArgument x:TypeArguments="x:Int32" x:Key="reqNo">[reqNo]</InArgument>
                  <InArgument x:TypeArguments="s:Object[]" x:Key="dataArray">[{reqNo,5,"Generated MH Summary sheet successfully."}]</InArgument>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="Config">[config]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Generate Extend Summary" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_57" UnSafe="False" WorkflowFileName="GenerateSummary.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="sd:DataTable" x:Key="TextDT">[excelDT]</InArgument>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="Config">[config]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="GrpCol">[Config("Xtend group column name")]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="AgrCol">[Config("Xtend sum column name")]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="SummaryType">Xtend Summary</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Write Log" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_58" UnSafe="False" WorkflowFileName="WriteLog.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="ui:DatabaseConnection" x:Key="connectionObj">[connectionObj]</InArgument>
                  <InArgument x:TypeArguments="x:Int32" x:Key="reqNo">[reqNo]</InArgument>
                  <InArgument x:TypeArguments="s:Object[]" x:Key="dataArray">[{reqNo,6,"Generated Extend Summary sheet successfully."}]</InArgument>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="Config">[config]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Generate MH Not Extend Sheet" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_59" UnSafe="False" WorkflowFileName="GenerateMHNotExtendSheet.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="sd:DataTable" x:Key="TextDT">[textDT]</InArgument>
                  <InArgument x:TypeArguments="sd:DataTable" x:Key="ExcelDT">[excelDT]</InArgument>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="Config">[config]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Write Log" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_61" UnSafe="False" WorkflowFileName="WriteLog.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="ui:DatabaseConnection" x:Key="connectionObj">[connectionObj]</InArgument>
                  <InArgument x:TypeArguments="x:Int32" x:Key="reqNo">[reqNo]</InArgument>
                  <InArgument x:TypeArguments="s:Object[]" x:Key="dataArray">[{reqNo,7,"Generated MH Not Extend sheet successfully."}]</InArgument>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="Config">[config]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Generate Xtend Not MH Sheet" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_60" UnSafe="False" WorkflowFileName="GenerateXtendNotMHSheet.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="sd:DataTable" x:Key="TextDT">[textDT]</InArgument>
                  <InArgument x:TypeArguments="sd:DataTable" x:Key="ExcelDT">[excelDT]</InArgument>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="Config">[config]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Write Log" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_64" UnSafe="False" WorkflowFileName="WriteLog.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="ui:DatabaseConnection" x:Key="connectionObj">[connectionObj]</InArgument>
                  <InArgument x:TypeArguments="x:Int32" x:Key="reqNo">[reqNo]</InArgument>
                  <InArgument x:TypeArguments="s:Object[]" x:Key="dataArray">[{reqNo,8,"Generated Extend Not MH sheet successfully."}]</InArgument>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="Config">[config]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Move To Processed Folder" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_65" UnSafe="False" WorkflowFileName="MovetoProcessedFolder.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="Config">[config]</InArgument>
                  <OutArgument x:TypeArguments="x:String" x:Key="MoveFileLogMsg">[moveFileLogMsg]</OutArgument>
                  <InArgument x:TypeArguments="x:Int32" x:Key="ReqNo">[reqNo]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Write Log" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_66" UnSafe="False" WorkflowFileName="WriteLog.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="ui:DatabaseConnection" x:Key="connectionObj">[connectionObj]</InArgument>
                  <InArgument x:TypeArguments="x:Int32" x:Key="reqNo">[reqNo]</InArgument>
                  <InArgument x:TypeArguments="s:Object[]" x:Key="dataArray">[{reqNo,9,moveFileLogMsg}]</InArgument>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="Config">[config]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Write Log" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_67" UnSafe="False" WorkflowFileName="WriteLog.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="ui:DatabaseConnection" x:Key="connectionObj">[connectionObj]</InArgument>
                  <InArgument x:TypeArguments="x:Int32" x:Key="reqNo">[reqNo]</InArgument>
                  <InArgument x:TypeArguments="s:Object[]" x:Key="dataArray">[{reqNo,10,"Process completed successfully."}]</InArgument>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="Config">[config]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
            </Sequence>
          </While>
        </Sequence>
      </FlowStep>
    </Flowchart.StartNode>
    <x:Reference>__ReferenceID0</x:Reference>
    <sads:DebugSymbol.Symbol>d1hDOlxVc2Vyc1xOYWxhbSBLYXJ1biBLdW1hclxEZXNrdG9wXEJvdCA0IC0gSW52ZW50b3J5IFByb2Nlc3MgV2Vla2x5IENvbXBhcmlzb25cTWFpbi54YW1shAFGA5ECDwIBAVIJjAIUAgECVgtaHgMBzwFbC4sCEwIBA1g+WFADAdEBVjxWZAMB0AFcDYoCGAIBBVtGW5QBAgEEXQ9hJwMBywFiD2kYAwHHAWoPcRgDAcIBcg9y8gIDAbsBcw96JwMBsQF7D4EBJwMBqQGCAQ+JAScDAZ8BigEPjgEnAwGbAY8BD5QBJwMBlgGVAQ+cAScDAYwBnQEPowEnAwGEAaQBD6oBJwIBfKsBD7IBJwIBcbMBD7sBJwIBZrwBD8MBJwIBXMQBD8wBJwIBUc0BD9QBJwIBR9UBD9sBJwIBP9wBD+MBJwIBNeQBD+oBJwIBLesBD/IBJwIBI/MBD/kBJwIBG/oBD4ECJwIBEIICD4kCJwIBBl9kX2wDAc0BXb8BXdsBAwHMAWc6Z3gDAcoBZDtkcwMByAFvOW9oAwHFAWw6bEEDAcMBcp8BcrYBAwHBAXLIAXLvAgMBvgFyNnJHAwG8AXdOd58BAwG5AXhjeGsDAbcBdV11bAMBtQFzsQFzwAEDAbQBdkd2TgMBsgF/Y39rAwGvAX1dfWwDAa0Be8oBe+8BAwGsAX5Hfk4DAaoBhgFOhgGOAQMBpwGHAWOHAWsDAaUBhAFdhAFsAwGjAYIBsQGCAcABAwGiAYUBR4UBTgMBoAGKAboBigHRAQMBngGMAUeMAU4DAZwBkQFRkQFrAwGaAZIBZpIBbgMBmAGPAbgBjwHNAQMBlwGZAU6ZAXUDAZQBmgFjmgFrAwGSAZcBXZcBbAMBkAGVAbEBlQHAAQMBjwGYAUeYAU4DAY0BoAFOoAFWAwGKAaEBY6EBawMBiAGdAbgBnQHNAQMBhwGfAU+fAVgDAYUBpwFTpwFkAwGCAaYBUKYBWAMBgAGoAWOoAWsCAX6kAbwBpAHTAQIBfa8BTq8BaQIBebABY7ABawIBd60BXa0BbAIBdasBsQGrAcABAgF0rgFHrgFOAgFytQFNtQFVAgFvtwFJtwFpAgFttgFjtgFrAgFruAFJuAFnAgFpswG7AbMB0QECAWi5AU65AVgCAWfAAU7AAYQBAgFkwQFjwQFrAgFivgFdvgFsAgFgvAGxAbwBwAECAV+/AUe/AU4CAV3GAU3GAVYCAVrIAUnIAWwCAVjHAWPHAWsCAVbJAUnJAWoCAVTEAb8BxAHVAQIBU8oBTsoBWwIBUtEBTtEBiAECAU/SAWPSAWsCAU3PAV3PAWwCAUvNAbEBzQHAAQIBStABR9ABTgIBSNcBTdcBVQIBRdkBY9kBawIBQ9UBxAHVAeMBAgFC2AFO2AFXAgFA4AFO4AGHAQIBPeEBY+EBawIBO94BXd4BbAIBOdwBsQHcAcABAgE43wFH3wFOAgE25gFN5gFVAgEz6AFj6AFrAgEx5AHDAeQB4QECATDnAU7nAVcCAS7vAU7vAYcBAgEr8AFj8AFrAgEp7QFd7QFsAgEn6wGxAesBwAECASbuAUfuAU4CAST2AVL2AWICASH1AWP1AWsCAR/zAcAB8wHcAQIBHvcBR/cBTgIBHP4BTv4BaAIBGP8BY/8BawIBFvwBXfwBbAIBFPoBsQH6AcABAgET/QFH/QFOAgERhgJOhgJ8AgEOhwJjhwJrAgEMhAJdhAJsAgEKggKxAYICwAECAQmFAkeFAk4CAQc=</sads:DebugSymbol.Symbol>
  </Flowchart>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="GetRobotAsset_2" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_45" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_5" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="314,60">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="DatabaseConnect_3" sap:VirtualizedContainerService.HintSize="314,59">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_46" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_47" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_48" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_49" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_50" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_51" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_52" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_53" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_54" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_55" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_56" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_57" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_58" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_59" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_61" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_60" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_64" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_65" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_66" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_67" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_4" sap:VirtualizedContainerService.HintSize="336,3050">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="While_2" sap:VirtualizedContainerService.HintSize="464,3208" />
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="486,3358">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_29">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">200,124.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_1" sap:VirtualizedContainerService.HintSize="658,2014">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
            <av:Size x:Key="ShapeSize">60,75</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">300,77.5 300,124.5</av:PointCollection>
            <x:Double x:Key="Height">1978.5</x:Double>
            <x:Double x:Key="Width">644</x:Double>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Main_1" sap:VirtualizedContainerService.HintSize="698,2094" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>